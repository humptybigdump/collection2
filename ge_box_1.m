function [output] = ge_box( x_min, x_max, y_min, y_max, varargin)
%% ge_box( x_min, x_max, y_min, y_max, varargin )
%     y_(min/max) & x_(min/max) are decimal degree coordinates (WGS84)
% AuthorizedOptions = {'id',...
%                      'idTag', ...
%                      'name',...
%                      'timeStamp', ...
%                      'timeSpanStart', ...
%                      'timeSpanStop', ...
%                      'description', ...
%                      'visibility', ...
%                      'LineWidth', ...
%                      'LineColor', ...
%                      'PolyColor', ...
%                      'extrude', ...
%                      'altitude', ...
%                      'altitudeMode', ...
%                      'tessellate', ...
%                      'Snippet'};

AuthorizedOptions = {'id',...
                     'idTag', ...
                     'name',...
                     'timeStamp', ...
                     'timeSpanStart', ...
                     'timeSpanStop', ...
                     'description', ...
                     'visibility', ...
                     'LineWidth', ...
                     'LineColor', ...
                     'PolyColor', ...
                     'extrude', ...
                     'altitude', ...
                     'altitudeMode', ...
                     'tessellate', ...
                     'Snippet'};

for k = 1:2:length(varargin(:))
    if ~strcmp(varargin{k}, AuthorizedOptions)
        error(['Unauthorized parameter name ' 39 varargin{k} 39 ' in ' 10,...
            'parameter/value passed to ' 39 mfilename 39 '.']);
    end
end
                     
                            
if( isempty( y_min ) || isempty( y_max ) || isempty(x_min) || isempty(x_max) )
    error('empty coordinates passed to ge_box(...).');
end

         id = 'default_box';
      idTag = 'id';
       name = 'ge_box';
description = '';
    timeStamp = ' ';
timeSpanStart = ' ';
 timeSpanStop = ' ';
 visibility = 1;
  LineColor = 'ffffffff';
  PolyColor = 'ffffffff';
  LineWidth = 1.0;
    Snippet = '';
   altitude = 1.0;
     extrude = 1;
     tessellate = 0;
 altitudeMode = 'clampToGround';

v = ge_parse_pairs(varargin);

for j = 1:length(v)
    eval(v{j});
end

id_chars = [ idTag '="' id '"' ];
poly_id_chars = [ idTag '="poly_' id '"' ];
name_chars = [ '<name>\n' name '\n</name>\n' ];
description_chars = [ '<description>\n<![CDATA[' description ']]>\n</description>\n' ];
visibility_chars = [ '<visibility>\n' int2str(visibility) '\n</visibility>\n' ];
lineColor_chars = [ '<color>\n' LineColor '\n</color>\n' ];
polyColor_chars = [ '<color>\n' PolyColor '\n</color>\n' ];
lineWidth_chars= [ '<width>\n' num2str(LineWidth, '%.2f') '\n</width>\n' ];
altitudeMode_chars = [ '<altitudeMode>\n' altitudeMode '\n</altitudeMode>\n' ];
snippet_chars = [ '<Snippet>' Snippet '</Snippet>\n' ];
extrude_chars = [ '<extrude>' int2str(extrude) '</extrude>\n' ];
tessellate_chars = [ '<tessellate>' int2str(tessellate) '</tessellate>\n' ];

if timeStamp == ' '
    timeStamp_chars = '';
else
    timeStamp_chars = [ '<TimeStamp><when>' timeStamp '</when></TimeStamp>\n' ];
end

if timeSpanStart == ' '
    timeSpan_chars = '';
else
    if timeSpanStop == ' ' 
        timeSpan_chars = [ '<TimeSpan><begin>' timeSpanStart '</begin></TimeSpan>\n' ];
    else
        timeSpan_chars = [ '<TimeSpan><begin>' timeSpanStart '</begin><end>' timeSpanStop '</end></TimeSpan>\n' ];    
    end
        
end

header = ['<Placemark ',id_chars,'>\n', ...
            name_chars, ...
            timeStamp_chars,...
            timeSpan_chars,...
            visibility_chars, ...
            snippet_chars, ...
            description_chars, ...
            '<Style>\n', ...
                '<LineStyle>\n', ...
                    lineColor_chars, ...
                    lineWidth_chars, ...
                '</LineStyle>\n', ...
                '<PolyStyle>\n', ...
                    polyColor_chars, ...
                '</PolyStyle>\n', ...
            '</Style>\n', ...
          '<Polygon ',poly_id_chars,'>\n', ....
            extrude_chars, ...
            '<outerBoundaryIs>\n', ...
              '<LinearRing>\n', ...
              extrude_chars, ...
              tessellate_chars, ...
              altitudeMode_chars, ...
                '<coordinates>\n',];
    
coordinates = [ sprintf('%.6f,%.6f,%.6f ', x_min, y_min, altitude), ...
              sprintf('%.6f,%.6f,%.6f ', x_max, y_min, altitude), ...
              sprintf('%.6f,%.6f,%.6f ', x_max, y_max, altitude), ...
              sprintf('%.6f,%.6f,%.6f ', x_min, y_max, altitude), ...
              sprintf('%.6f,%.6f,%.6f ', x_min, y_min, altitude), '\n', ];

footer = ['</coordinates>\n', ...
      '</LinearRing>\n', ...
    '</outerBoundaryIs>\n', ...
  '</Polygon>\n', ...
'</Placemark>\n'];

output = [ header, coordinates, footer ];
