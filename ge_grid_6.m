function [output] = ge_grid( minLat, maxLat, minLong, maxLong, varargin )
%% ge_grid( minLat, maxLat, minLong, maxLong, varargin)
%     (min/max)Lat, (min/max)Long are decimal degree coordinates
% AuthorizedOptions = {'id',...
%                      'idTag', ...
%                      'name',...
%                      'timeStamp', ...
%                      'timeSpanStart', ...
%                      'timeSpanStop', ...
%                      'description', ...
%                      'visibility', ...
%                      'LineWidth', ...
%                      'LineColor', ...
%                      'PolyColor', ...
%                      'altitude', ...
%                      'altitudeMode', ...
%                      'latRes', ...
%                      'lonRes', ...
%                      'extrude', ...
%                      'Snippet'};
                 
AuthorizedOptions = {'id',...
                     'idTag', ...
                     'name',...
                     'timeStamp', ...
                     'timeSpanStart', ...
                     'timeSpanStop', ...
                     'description', ...
                     'visibility', ...
                     'LineWidth', ...
                     'LineColor', ...
                     'PolyColor', ...
                     'altitude', ...
                     'altitudeMode', ...
                     'latRes', ...
                     'lonRes', ...
                     'extrude', ...
                     'Snippet'};

for k = 1:2:length(varargin(:))
    if ~strcmp(varargin{k}, AuthorizedOptions)
        error(['Unauthorized parameter name ' 39 varargin{k} 39 ' in ' 10,...
            'parameter/value passed to ' 39 mfilename 39 '.']);
    end
end
                     
                            
if( isempty( minLat ) || isempty( maxLat ) || isempty( minLong ) || isempty( maxLong) )
    error('empty coordinates passed to ge_grid(...).');
end

         %id = 'default_grid';
      idTag = 'id';
       %name = 'ge_grid';
%description = '';
 visibility = 1;
  LineColor = '00000000';
  PolyColor = 'ffffffff';
  LineWidth = 0.0;
    timeStamp = ' ';
timeSpanStart = ' ';
 timeSpanStop = ' ';
    %Snippet = '';
   altitude = 1.0;
   extrude = 1;
 altitudeMode = 'relativeToGround';
    latRes = abs( maxLat - minLat );
    lonRes = abs( minLong - maxLong );
    tessellate = 0;


v = ge_parse_pairs(varargin);

for j = 1:length(v)
    eval(v{j});
end

output= '';

col = minLat;
for row = (minLong):lonRes:(maxLong-lonRes)
    output = [output, ge_box( maxLat, minLat, row+lonRes, row, 'timeStamp', timeStamp, 'timeSpanStart', timeSpanStart, 'timeSpanStop', timeSpanStop, 'altitude', altitude, 'tessellate', tessellate, 'altitudeMode', altitudeMode, 'extrude', extrude, 'id', ['gridcell_',int2str(row),'_',int2str(col)], 'idTag', idTag, 'name', ['gridcell_',int2str(row),'_',int2str(col)], 'LineWidth', LineWidth, 'LineColor', LineColor, 'PolyColor', PolyColor , 'visibility', visibility) ];
end  
row = minLong;
for col = (minLat):latRes:(maxLat-latRes)
    output = [output, ge_box( col+latRes, col, minLong, maxLong, 'timeStamp', timeStamp, 'timeSpanStart', timeSpanStart, 'timeSpanStop', timeSpanStop, 'altitude', altitude, 'tessellate', tessellate, 'altitudeMode', altitudeMode, 'extrude', extrude, 'id', ['gridcell_',int2str(row),'_',int2str(col)], 'idTag', idTag, 'name', ['gridcell_',int2str(row),'_',int2str(col)], 'LineWidth', LineWidth, 'LineColor', LineColor, 'PolyColor', PolyColor , 'visibility', visibility) ];
end
 
